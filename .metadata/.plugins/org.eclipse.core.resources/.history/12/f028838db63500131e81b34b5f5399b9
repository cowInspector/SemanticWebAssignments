package semWeb.lab3;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;

import com.hp.hpl.jena.query.Dataset;
import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.query.QueryExecution;
import com.hp.hpl.jena.query.QueryExecutionFactory;
import com.hp.hpl.jena.query.QueryFactory;
import com.hp.hpl.jena.query.ResultSet;
import com.hp.hpl.jena.query.ResultSetFormatter;
import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.sdb.SDBFactory;
import com.hp.hpl.jena.sdb.Store;
import com.hp.hpl.jena.util.FileManager;

public class Lab3_2 {

	static final String inputFileName = "75b_Lab3-monterey.rdf";
	static Model model;

	public static void main(String[] args) {

		// Set the user name and password as system properties.
		// These are read internally to connect to MySQL.
		System.setProperty("jena.db.user", "jenasdb");
		System.setProperty("jena.db.password", "fastdb");

		// Start time of reading the file into the model.
		Date startDate = new Date();

		readModelFromFile();
		// Establish connection to SDB2 database using the ttl file.
		Store store = SDBFactory.connectStore("sdb.ttl");

		// Clear the existing data in the database.
		store.getTableFormatter().truncate();
		// Connect a Dataset
		Dataset dataset = SDBFactory.connectDataset(store);
		dataset.getDefaultModel().add(model);

		store.close();
		// End time capturing when the file was read completely.
		Date endDate = new Date();

		System.out.println("Load of monterey.rdf took "
				+ (float) ((endDate.getTime() - startDate.getTime()) / 1000.00)
				+ " seconds");
		executeQuery();

	}

	private static void executeQuery() {
		String queryString = "SELECT ?p ?o WHERE { <urn:monterey:#incident1> ?p ?o }";
		Query query = QueryFactory.create(queryString);

		QueryExecution qe = QueryExecutionFactory.create(query, model);
		ResultSet rs = qe.execSelect();

		try {
			ResultSetFormatter.outputAsXML(new FileOutputStream(
					"Lab3_2_YKrishnan.xml"), rs);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	public static void readModelFromFile() {

		// Create a default model.
		model = ModelFactory.createDefaultModel();

		// Open the rdf file.
		InputStream in = FileManager.get().open(inputFileName);

		// Handle the exception if file doesn't exist.
		if (in == null) {
			throw new IllegalArgumentException("File: " + inputFileName
					+ " not found");
		}

		/*
		 * // Start time of reading the file into the model. Date startDate =
		 * new Date();
		 */
		// read the RDF/XML file
		model.read(in, "");

		/*
		 * // End time capturing when the file was read completely. Date endDate
		 * = new Date();
		 * 
		 * System.out.println("Load of monterey.rdf took " + (float)
		 * ((endDate.getTime() - startDate.getTime()) / 1000.00) + " seconds");
		 */

		// Close the file.
		try {
			in.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

}
